Problem Statement 8 (DML USING MYSQL)
Create following tables using a given schema and insert appropriate data into the same: Customer (CustID, Name, Cust_Address, Phone_no, Email_ID, Age)
Branch (Branch ID, Branch_Name, Address)
Account (Account_no, Branch ID, CustID, date_open, Account_type, Balance)
1. Modify the size of column “Email_Address” to 20 in Customer table.
2. Change the column “Email_Address” to Not Null in Customer table.
3. Display the total customers with the balance >50, 000 Rs.
4. Display average balance for account type=”Saving Account”.
5. Display the customer details that lives in Pune or name starts with ’A’.
6. Create a table Saving_Account with (Account_no, Branch ID, CustID, date_open, Balance) using Account Table.
7. Display the customer details Age wise with balance>=20,000Rs

solution : 

-- Create the Customer table
CREATE TABLE Customer (
    CustID INT PRIMARY KEY,          -- Customer ID
    Name VARCHAR(50),                -- Customer Name
    Cust_Address VARCHAR(100),       -- Customer Address
    Phone_no VARCHAR(15),            -- Customer Phone Number
    Email_ID VARCHAR(50),            -- Customer Email Address
    Age INT                          -- Customer Age
);

-- Create the Branch table
CREATE TABLE Branch (
    BranchID INT PRIMARY KEY,        -- Branch ID
    Branch_Name VARCHAR(50),         -- Branch Name
    Address VARCHAR(100)             -- Branch Address
);

-- Create the Account table
CREATE TABLE Account (
    Account_no INT PRIMARY KEY,      -- Account Number
    BranchID INT,                    -- Branch ID (Foreign Key)
    CustID INT,                      -- Customer ID (Foreign Key)
    date_open DATE,                  -- Account Opening Date
    Account_type VARCHAR(20),        -- Account Type (e.g., Saving Account)
    Balance DECIMAL(10, 2),          -- Account Balance
    FOREIGN KEY (BranchID) REFERENCES Branch(BranchID),
    FOREIGN KEY (CustID) REFERENCES Customer(CustID)
);

-- Insert data into Customer table
INSERT INTO Customer (CustID, Name, Cust_Address, Phone_no, Email_ID, Age) 
VALUES (1, 'John Doe', '123 Main St, Pune', '9876543210', 'john@example.com', 30),
       (2, 'Alice Smith', '456 Park Ave, Mumbai', '9988776655', 'alice@example.com', 25),
       (3, 'Bob Johnson', '789 Elm St, Pune', '9556677889', 'bob@example.com', 45),
       (4, 'Anna Taylor', '101 Oak St, Pune', '9776655443', 'anna@example.com', 35);

-- Insert data into Branch table
INSERT INTO Branch (BranchID, Branch_Name, Address) 
VALUES (1, 'Pune Main Branch', '456 Pune Road, Pune'),
       (2, 'Mumbai Branch', '789 Mumbai Street, Mumbai');

-- Insert data into Account table
INSERT INTO Account (Account_no, BranchID, CustID, date_open, Account_type, Balance) 
VALUES (101, 1, 1, '2023-01-01', 'Saving Account', 55000),
       (102, 1, 2, '2022-05-15', 'Current Account', 10000),
       (103, 2, 3, '2021-10-10', 'Saving Account', 30000),
       (104, 2, 4, '2020-03-05', 'Saving Account', 70000);

Task 1: Modify the size of the column Email_ID in the Customer table:

ALTER TABLE Customer MODIFY Email_ID VARCHAR(20);

Task 2: Change the column Email_ID to NOT NULL in the Customer table:

ALTER TABLE Customer MODIFY Email_ID VARCHAR(20) NOT NULL;

Task 3: Display the total customers with the balance > 50,000 Rs:

SELECT COUNT(DISTINCT c.CustID) AS Total_Customers
FROM Customer c
JOIN Account a ON c.CustID = a.CustID
WHERE a.Balance > 50000;

Task 4: Display the average balance for Saving Account:

SELECT AVG(Balance) AS Average_Balance
FROM Account
WHERE Account_type = 'Saving Account';

Task 5: Display the customer details that live in Pune or whose name starts with 'A':

SELECT * 
FROM Customer
WHERE Cust_Address LIKE '%Pune%' OR Name LIKE 'A%';

Task 6: Create a Saving_Account table using the Account table:

CREATE TABLE Saving_Account AS
SELECT Account_no, BranchID, CustID, date_open, Balance
FROM Account
WHERE Account_type = 'Saving Account';

Task 7: Display the customer details age-wise with balance >= 20,000 Rs:

SELECT c.Name, c.Age, a.Balance
FROM Customer c
JOIN Account a ON c.CustID = a.CustID
WHERE a.Balance >= 20000
ORDER BY c.Age;

<=========================================================================================================================================================================================================================================================>

Problem Statement 17 (DML USING MYSQL)
Create following tables using a given schema and insert appropriate data into the same: Customer (CustID, Name, Cust_Address, Phone_no, Age)
Branch (Branch ID, Branch_Name, Address)
Account (Account_no, Branch ID, CustID, date_open, Account_type, Balance)
1. Add the column “Email_Address” in Customer table.
2. Change the name of column “Email_Address” to “Email_ID” in Customer table.
3. Display the customer details with highest balance in the account.
4. Display the customer details with lowest balance for account type= “Saving Account”.
5. Display the customer details that live in Pune and have age greater than 35.
6. Display the Cust_ID, Name and Age of the customer in ascending order of their age.
7. Display the Name and Branch ID of the customer group by the Account_type.



solution : 

Step 1: Create Tables and Insert Data

-- Create Customer table
CREATE TABLE Customer (
    CustID INT PRIMARY KEY,
    Name VARCHAR(50),
    Cust_Address VARCHAR(100),
    Phone_no VARCHAR(15),
    Age INT
);

-- Create Branch table
CREATE TABLE Branch (
    Branch_ID INT PRIMARY KEY,
    Branch_Name VARCHAR(50),
    Address VARCHAR(100)
);

-- Create Account table
CREATE TABLE Account (
    Account_no INT PRIMARY KEY,
    Branch_ID INT,
    CustID INT,
    date_open DATE,
    Account_type VARCHAR(20),
    Balance DECIMAL(10, 2),
    FOREIGN KEY (Branch_ID) REFERENCES Branch(Branch_ID),
    FOREIGN KEY (CustID) REFERENCES Customer(CustID)
);

-- Insert sample data into Customer table
INSERT INTO Customer (CustID, Name, Cust_Address, Phone_no, Age) 
VALUES (1, 'John Doe', 'Pune, Maharashtra', '9876543210', 40);

INSERT INTO Customer (CustID, Name, Cust_Address, Phone_no, Age) 
VALUES (2, 'Jane Smith', 'Mumbai, Maharashtra', '8765432109', 30);

INSERT INTO Customer (CustID, Name, Cust_Address, Phone_no, Age) 
VALUES (3, 'Alice Brown', 'Pune, Maharashtra', '7654321098', 45);

-- Insert sample data into Branch table
INSERT INTO Branch (Branch_ID, Branch_Name, Address) 
VALUES (101, 'Main Branch', 'Pune, Maharashtra');

INSERT INTO Branch (Branch_ID, Branch_Name, Address) 
VALUES (102, 'Secondary Branch', 'Mumbai, Maharashtra');

-- Insert sample data into Account table
INSERT INTO Account (Account_no, Branch_ID, CustID, date_open, Account_type, Balance) 
VALUES (1001, 101, 1, '2022-01-01', 'Saving Account', 10000.00);

INSERT INTO Account (Account_no, Branch_ID, CustID, date_open, Account_type, Balance) 
VALUES (1002, 102, 2, '2021-05-10', 'Current Account', 5000.00);

INSERT INTO Account (Account_no, Branch_ID, CustID, date_open, Account_type, Balance) 
VALUES (1003, 101, 3, '2020-03-15', 'Saving Account', 20000.00);

Step 2: Perform the Required Operations

1. Add the column "Email_Address" in the Customer table:

ALTER TABLE Customer ADD COLUMN Email_Address VARCHAR(100);

2. Change the name of column "Email_Address" to "Email_ID" in the Customer table:

ALTER TABLE Customer CHANGE COLUMN Email_Address Email_ID VARCHAR(100);

3. Display the customer details with the highest balance in the account:

SELECT c.CustID, c.Name, c.Cust_Address, c.Phone_no, c.Age, a.Account_no, a.Balance
FROM Customer c
JOIN Account a ON c.CustID = a.CustID
WHERE a.Balance = (SELECT MAX(Balance) FROM Account);

4. Display the customer details with the lowest balance for account type = "Saving Account":

SELECT c.CustID, c.Name, c.Cust_Address, c.Phone_no, c.Age, a.Account_no, a.Balance
FROM Customer c
JOIN Account a ON c.CustID = a.CustID
WHERE a.Account_type = 'Saving Account'
AND a.Balance = (SELECT MIN(Balance) FROM Account WHERE Account_type = 'Saving Account');

5. Display the customer details that live in Pune and have age greater than 35:

SELECT CustID, Name, Cust_Address, Phone_no, Age
FROM Customer
WHERE Cust_Address LIKE '%Pune%' AND Age > 35;

6. Display the Cust_ID, Name, and Age of the customer in ascending order of their age:

SELECT CustID, Name, Age
FROM Customer
ORDER BY Age ASC;

7. Display the Name and Branch ID of the customer grouped by the Account_type:

SELECT c.Name, a.Branch_ID, a.Account_type
FROM Customer c
JOIN Account a ON c.CustID = a.CustID
GROUP BY a.Account_type, c.Name, a.Branch_ID;
